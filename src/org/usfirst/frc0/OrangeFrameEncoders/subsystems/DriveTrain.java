// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.
package org.usfirst.frc0.OrangeFrameEncoders.subsystems;

import org.usfirst.frc0.OrangeFrameEncoders.RobotMap;
import org.usfirst.frc0.OrangeFrameEncoders.commands.*;
import edu.wpi.first.wpilibj.*;

import edu.wpi.first.wpilibj.command.Subsystem;
import org.usfirst.frc0.OrangeFrameEncoders.Robot;

/**
 *
 */
public class DriveTrain extends Subsystem {

    
    SpeedController rightFront = RobotMap.driveTrainRightFront;
    
    SpeedController rightRear = RobotMap.driveTrainRightRear;
    
    SpeedController leftFront = RobotMap.driveTrainLeftFront;
    
    SpeedController leftRear = RobotMap.driveTrainLeftRear;
    
    RobotDrive robotDrive41 = RobotMap.driveTrainRobotDrive41;
    
    DoubleSolenoid shifterSolenoid = RobotMap.shifterSolenoid;
    
    
  

    // Put methods for controlling this subsystem
    // here. Call these from Commands.
    public void initDefaultCommand() {
        
        setDefaultCommand(new DriveTrainHandler());
        robotDrive41.tankDrive(0, 0);
        shifterSolenoid.set(DoubleSolenoid.Value.kReverse);

        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }

    public void HandleDriveTrain() {
   
    
       robotDrive41.tankDrive(Robot.oi.getJoyL().getRawAxis(2), Robot.oi.getJoyR().getRawAxis(2));
        
        
       
    }
    
    
        public void shiftHigh(){
           shifterSolenoid.set(DoubleSolenoid.Value.kReverse);
        }
        
        
        public void shiftLow(){
            shifterSolenoid.set(DoubleSolenoid.Value.kForward);
        }
  
}